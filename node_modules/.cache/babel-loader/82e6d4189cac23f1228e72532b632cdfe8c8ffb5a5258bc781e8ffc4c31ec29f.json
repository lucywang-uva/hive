{"ast":null,"code":"var _jsxFileName = \"/Users/lucywang/hive/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { Select } from './Select';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const mockMultiSelectOptions = [{\n    label: \"apple\",\n    value: 1,\n    selected: false\n  }, {\n    label: \"pear\",\n    value: 2,\n    selected: false\n  }, {\n    label: \"banana\",\n    value: 3,\n    selected: false\n  }, {\n    label: \"watermelon\",\n    value: 4,\n    selected: false\n  }, {\n    label: \"orange\",\n    value: 5,\n    selected: false\n  }, {\n    label: \"grape\",\n    value: 6,\n    selected: false\n  }];\n  const mockSingleSelectOptions = [{\n    label: \"carrot\",\n    value: 1,\n    selected: false\n  }, {\n    label: \"cabbage\",\n    value: 2,\n    selected: false\n  }, {\n    label: \"onion\",\n    value: 3,\n    selected: false\n  }, {\n    label: \"mushroom\",\n    value: 4,\n    selected: false\n  }, {\n    label: \"spinach\",\n    value: 5,\n    selected: false\n  }, {\n    label: \"garlic\",\n    value: 6,\n    selected: false\n  }];\n  const [selectedMultiSelectOptions, setSelectedMultiSelectOptions] = useState([]);\n  const [selectedSingleSelectOption, setSelectedSingleSelectOption] = useState();\n  console.log(selectedMultiSelectOptions);\n  console.log(selectedSingleSelectOption);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center pt-32 gap-32\",\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      labelName: \"Select fruit(s)\",\n      options: mockMultiSelectOptions,\n      isMulti: true,\n      setSelected: setSelectedMultiSelectOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      labelName: \"Select vegetable\",\n      options: mockSingleSelectOptions,\n      isMulti: false,\n      setSelected: setSelectedSingleSelectOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nhDyhvSvdfSBkMEVZtOELxlBdG0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Select","useState","jsxDEV","_jsxDEV","App","_s","mockMultiSelectOptions","label","value","selected","mockSingleSelectOptions","selectedMultiSelectOptions","setSelectedMultiSelectOptions","selectedSingleSelectOption","setSelectedSingleSelectOption","console","log","className","children","labelName","options","isMulti","setSelected","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lucywang/hive/src/App.js"],"sourcesContent":["import './App.css';\nimport { Select } from './Select';\nimport { useState } from 'react';\n\n\nconst App = () => {\n  const mockMultiSelectOptions = [{label: \"apple\", value: 1, selected: false}, {label: \"pear\", value: 2, selected: false}, {label: \"banana\", value: 3, selected: false}, {label: \"watermelon\", value: 4, selected: false}, {label: \"orange\", value: 5, selected: false}, {label: \"grape\", value: 6, selected: false}]\n  const mockSingleSelectOptions = [{label: \"carrot\", value: 1, selected: false}, {label: \"cabbage\", value: 2, selected: false}, {label: \"onion\", value: 3, selected: false}, {label: \"mushroom\", value: 4, selected: false}, {label: \"spinach\", value: 5, selected: false}, {label: \"garlic\", value: 6, selected: false}]\n  \n  const [selectedMultiSelectOptions, setSelectedMultiSelectOptions] = useState([]);\n  const [selectedSingleSelectOption, setSelectedSingleSelectOption] = useState();\n\n  console.log(selectedMultiSelectOptions);\n  console.log(selectedSingleSelectOption);\n\n  return (\n    <div className=\"flex items-center justify-center pt-32 gap-32\">\n      <Select labelName={\"Select fruit(s)\"} options={mockMultiSelectOptions} isMulti={true} setSelected={setSelectedMultiSelectOptions}/>\n      <Select labelName={\"Select vegetable\"} options={mockSingleSelectOptions} isMulti={false} setSelected={setSelectedSingleSelectOption} />\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,MAAM,QAAQ,UAAU;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,sBAAsB,GAAG,CAAC;IAACC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EACnT,MAAMC,uBAAuB,GAAG,CAAC;IAACH,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,EAAE;IAACF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAK,CAAC,CAAC;EAEvT,MAAM,CAACE,0BAA0B,EAAEC,6BAA6B,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChF,MAAM,CAACY,0BAA0B,EAAEC,6BAA6B,CAAC,GAAGb,QAAQ,CAAC,CAAC;EAE9Ec,OAAO,CAACC,GAAG,CAACL,0BAA0B,CAAC;EACvCI,OAAO,CAACC,GAAG,CAACH,0BAA0B,CAAC;EAEvC,oBACEV,OAAA;IAAKc,SAAS,EAAC,+CAA+C;IAAAC,QAAA,gBAC5Df,OAAA,CAACH,MAAM;MAACmB,SAAS,EAAE,iBAAkB;MAACC,OAAO,EAAEd,sBAAuB;MAACe,OAAO,EAAE,IAAK;MAACC,WAAW,EAAEV;IAA8B;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnIvB,OAAA,CAACH,MAAM;MAACmB,SAAS,EAAE,kBAAmB;MAACC,OAAO,EAAEV,uBAAwB;MAACW,OAAO,EAAE,KAAM;MAACC,WAAW,EAAER;IAA8B;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpI,CAAC;AAGV,CAAC;AAAArB,EAAA,CAjBKD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAmBT,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}